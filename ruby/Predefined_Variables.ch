= Predefined Variables:
== Exception Information
  $! Exception The exception object passed to raise. [thread]

  $@ Array The stack backtrace generated by the last exception. See Kernel#caller for details. [thread]

== Pattern Matching Variables (local to the current scope.)
  $& String The string matched (following a successful pattern match).

  $+ String The contents of the highest-numbered group matched following a successful pattern match.

  $` String The string preceding the match in a successful pattern match.

  $' String The string following the match in a successful pattern match.

  $1~$9 String The contents of successive groups matched in a successful pattern match.

  $~ MatchData An object that encapsulates the results of a successful pattern match.

== Input/Output Variables

  $/ String The input record separator (newline by default). This is the value that routines such as Kernel#gets use to determine record boundaries. If set to nil, gets will read the entire file.

  $-0 String Synonym for $/.

  $\ String The string appended to the output of every call to methods such as Kernel#print and IO#write. The default value is nil.

  $, String The separator string output between the parameters to methods such as Kernel#print and Array#join. Defaults to nil, which adds no text.

  $. Fixnum The number of the last line read from the current input file.

  $; String The default separator pattern used by String#split. May be set from the command line using the F flag.

  $< Object An object that provides access to the concatenation of the contents of all the files given as command-line arguments or $stdin

  $> IO The destination of output for Kernel#print and Kernel#printf. The default value is $stdout.

  $_ String The last line read by Kernel#gets or Kernel#readline.

  $-F String Synonym for $;.

  $stderr IO The current standard error output.

  $stdin IO The current standard input.

  $stdout IO The current standard output. Assignment to $stdout

== Execution Environment Variables
  $0 String The name of the top-level Ruby program being executed.

  $* Array An array of strings containing the command-line options from the invocation
  of the program.

  $" Array An array containing the filenames of modules loaded by require.

  $$ Fixnum The process number of the program being executed. [r/o]

  $? Process::Status The exit status of the last child process to terminate.

  $: Array An array of strings, where each string specifies a directory to be searched for Ruby scripts and binary extensions used by the load and require methods.

  $-a Object True if the a option is specified on the command line. [r/o]

  $-d Object Synonym for $DEBUG.  $DEBUG Object Set to true if the d command-line option is specified.

  __FILE__ String The name of the current source file. [r/o]

  $F Array The array that receives the split input line if the a command-line option is used.

  $FILENAME String The name of the current input file. Equivalent to $<.filename. [r/o]

  $i String If in-place edit mode is enabled (perhaps using the i command-line option), $i holds the extension used when creating the backup file. If you set a value into $i, enables in-place edit mode.

  $-I Array Synonym for $:. [r/o]

  $-K String Sets the multibyte coding system for strings and regular expressions. Equivalent to the K command-line option.

  $-l Object Set to true if the l option (which enables line-end processing) is present
  on the command line.

  __LINE__ String The current line number in the source file. [r/o]

  $LOAD_PATH Array A synonym for $:. [r/o]

  $-p Object Set to true if the p option (which puts an implicit while gets . . . end loop around your program) is present on the command line.

  $SAFE Fixnum The current safe level (see page 380). This variable\u2019s value may never be reduced by assignment. [thread]

  $VERBOSE Object Set to true if the v, version, W, or w option is specified on the command line.

== Standard Objects
  ARGF Object A synonym for $<.

  ARGV Array A synonym for $*.

  ENV Object A hash-like object containing the program\u2019s environment variables. An instance of class Object, ENV implements the full set of Hash methods. Used to query and set the value of an environment variable, as in ENV["PATH"] and ENV["term"]="ansi".
  
  false FalseClass Singleton instance of class FalseClass. [r/o]
  
  nil NilClass The singleton instance of class NilClass. The value of uninitialized instance and global variables. [r/o] Prepared exclusively

  self Object The receiver (object) of the current method. [r/o]

  true TrueClass Singleton instance of class TrueClass. [r/o]

== Global Constants
  DATA IO If the the main program file contains the directive __END__, then the constant DATA will be initialized so that reading from it will return lines following __END__ from the source file.
  
  FALSE FalseClass Synonym for false.

  NIL NilClass Synonym for nil.

  RUBY_PLATFORM String The identifier of the platform running this program.

  RUBY_RELEASE_DATE String The date of this release.

  RUBY_VERSION String The version number of the interpreter.

  STDERR IO The actual standard error stream for the program. The initial value of $stderr.

  STDIN IO The actual standard input stream for the program. The initial value of $stdin.

  STDOUT IO The actual standard output stream for the program. The initial value of $stdout.

  SCRIPT_LINES__ Hash If a constant SCRIPT_LINES__ is defined and references a Hash, Ruby will store an entry containing the contents of each file it parses, with the file\u2019s name as the key and an array of strings as the value. See Kernel.require for an example.

  TOPLEVEL_BINDING Binding A Binding object representing the binding at Ruby\u2019s top level\u2014 the level where programs are initially executed.

  TRUE TrueClass Synonym for true.
